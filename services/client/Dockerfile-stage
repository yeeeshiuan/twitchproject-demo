###########
# BUILDER #
###########
# base image
FROM node:10.4.1-alpine as builder

# set working directory
WORKDIR /usr/src/app

# create build
COPY . /usr/src/app

# install app dependencies
ENV PATH /usr/src/app/node_modules/.bin:$PATH
COPY package.json /usr/src/app/package.json
RUN npm install

# set environment variables
ARG NODE_ENV
ENV NODE_ENV $NODE_ENV
ARG REACT_APP_DOMAIN_NAME_URL
ENV REACT_APP_DOMAIN_NAME_URL $REACT_APP_DOMAIN_NAME_URL
ARG REACT_APP_CSRF_TOKEN
ENV REACT_APP_CSRF_TOKEN $REACT_APP_CSRF_TOKEN
ARG REACT_APP_TWITCH_CALLBACK_URL
ENV REACT_APP_TWITCH_CALLBACK_URL $REACT_APP_TWITCH_CALLBACK_URL
ARG REACT_APP_TWITCH_OAUTH_LINK
ENV REACT_APP_TWITCH_OAUTH_LINK $REACT_APP_TWITCH_OAUTH_LINK
ARG REACT_APP_TWITCH_CLIENT_ID
ENV REACT_APP_TWITCH_CLIENT_ID $REACT_APP_TWITCH_CLIENT_ID
ARG REACT_APP_TWITCH_USER_NAME
ENV REACT_APP_TWITCH_USER_NAME $REACT_APP_TWITCH_USER_NAME
ARG REACT_APP_TWITCH_OAUTH_TOKEN
ENV REACT_APP_TWITCH_OAUTH_TOKEN $REACT_APP_TWITCH_OAUTH_TOKEN
ARG REACT_APP_TWITCH_TOP_STREAM_API_URL
ENV REACT_APP_TWITCH_TOP_STREAM_API_URL $REACT_APP_TWITCH_TOP_STREAM_API_URL

RUN npm install terser@3.14.1 --save-dev
RUN npm run build

#########
# FINAL #
#########

# base image
FROM nginx:1.15.0-alpine

# update nginx conf
RUN rm -rf /etc/nginx/conf.d
COPY conf /etc/nginx

# copy static files
COPY --from=builder /usr/src/app/build /usr/share/nginx/html

# expose port
EXPOSE 80

# run nginx
CMD ["nginx", "-g", "daemon off;"]
